package AlphaPackage;

import java.awt.Color;
import java.awt.Toolkit;

/**
 *******************************************************************************
 * File name    -   AboutGUI.java 
 * <br>Description  This is the main GUI about JDialog form, citing all of the 
 *                  information.
 * <br>Created on   08/01/2018 macOS Sierra Version 10.12.1, NetBeans 8.2, 
 *                  jdk 1.8.0_144
 * @author          Illarion Eremenko
 * @version         1.3
 * <pre> 
 *   project:       Lab #1, About form
 *   platform:      JDK 1.8.0_141
 *   IDE:           Netbeans 8.2 
 *   course:        CS141, 2810, 2:50PM 
 *   hours:         30 minutes 
 * </pre> 
 * @see             java.awt.Color
 * @see             java.awt.Toolkit
 *****************************************************************************
 */
public class AboutGUI extends javax.swing.JDialog {

    /**
     * Background color that is used for the form and other components.
     */
    //private final Color back = new Color(153, 255, 153);
    //private final Color back = new Color(204,153,255);
     /**
     * Creates new form AboutGUI
     * @param parent    The {@code Frame} from which the dialog is displayed
     * @param modal     Specifies whether dialog blocks user input to other 
     *                  top-level windows when shown. If {@code true}, the 
     *                  modality type property is set to 
     *                  {@code DEFAULT_MODALITY_TYPE}, otherwise the dialog 
     *                  is modeless.
     */
    public AboutGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //set the Calculate button as default
        this.getRootPane().setDefaultButton(closeJButton);
        //center the form on startup
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJLabel = new javax.swing.JLabel();
        mainJScrollPane = new javax.swing.JScrollPane();
        aboutJPanel = new javax.swing.JPanel();
        firstAboutJTextArea = new javax.swing.JTextArea();
        creditsJPanel = new javax.swing.JPanel();
        createdJLabel = new javax.swing.JLabel();
        versionJLabel = new javax.swing.JLabel();
        closeJButton = new javax.swing.JButton();
        copyrightJLabel = new javax.swing.JLabel();
        versionJLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("About");
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        titleJLabel.setFont(new java.awt.Font("Tempus Sans ITC", 2, 24)); // NOI18N
        titleJLabel.setText("Print Queue Simulation");

        mainJScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        firstAboutJTextArea.setBackground(new java.awt.Color(238, 238, 238));
        firstAboutJTextArea.setColumns(20);
        firstAboutJTextArea.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        firstAboutJTextArea.setLineWrap(true);
        firstAboutJTextArea.setRows(5);
        firstAboutJTextArea.setText("1.PrintQueueSimulationGUI--the simulation driver class. A GUI-based JFrame that allows the user to set/select number of servers (printers),  set/select mean interarrival time, and set/select mean duration of each job. This class contain as instance variables and array of servers (printers), a queue and a random instance variable. It manage arrival of clients, serve them, enqueue and dequeue them in the queue and display the results.\n2.Client--Each print job has an instance of this class. It contains a random number generator randomJobSize that generates the exponentially distributed job sizes with a mean of 100 pages. It is declared static because only one instance is needed to produce all the job sizes. Similarly, the static int nextId is used to generate identification numbers for all the jobs. The constructor uses the next Id counter to set the job id, and it uses the randomJobSize generator to set the jobSize. Then it prints one line of output, announcing that that job has arrived. The beginService () method assigns the server reference to the printer that invoked it and thenprints one line of output, announcing that the printing has begun. Similarly, the endService() method nullifies the server reference after printing one line of output that announces that the printing has ended.\n3.Server--It has a random number generator randomMeanServiceRate that generates the normally distributed rates with mean 100.0 and standard deviation 20.0. It produces the meanServiceRate for each printer. In the run just shown, it produced the rates 89 for Printer A, 97 for Printer B, 106 for Printer C, and 128 for Printer D. Similarly, the random number generator randomServiceRate generates the normallydistributed rates for each print job. In the run just shown, it produced the rates 84 for Job #1, 87 for Job #3, and 92 for Job #5. Those came from a normal distribution with mean 89 (for Printer A). The standard deviation is set at 10 for each printer's distribution.The beginServing () method assigns the client reference to the client job that it is printing and obtains the normally distributed serviceRate from the randomServiceRate generator. Then it sends the beginService message to its client print job. Next, the assignment int serviceTime = (int)Math.ceil(client.getJobSize()/serviceRate);computes the time (number of seconds) that it will take to do the print job by dividing the job size (the number of pages) by the printing rate (pages per second). The integer ceiling of this ratio is used as acount of the number of seconds to elapse. This count is then added to the current time to initialize thetimeServiceEnds field of the Server object.\n4.Random--extends java.utilRandom. Given above.\n5.List classthat contains ListNodes and has a size() method.\n6. Queue a class that extends List. Public method include at least enqueue, dequeue, and isEmpty().You may decide to implement the Queue class differentlyâ€”for example:ArrayList implementation.\n7.Appropriate Exception classes.\n8.Splash screen with which the program begins and an About form which describes the project among other info (copyright, warning, logo, etc.).\n9.Javadocs, description of the program, and comments, comments everywhere.\n10.Menus that synchronize with corresponding buttons and with at least the following menu choices: File with Open, Clear, Print, and Exit menu items. Statistics displaying all averages (see extra credit below). Help with About menu item for an About form.\n11.The project starts with a Splash Screen that closes itself after so many seconds and it contain an About form activated from the Help menu.");
        firstAboutJTextArea.setWrapStyleWord(true);
        firstAboutJTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        firstAboutJTextArea.setFocusable(false);

        javax.swing.GroupLayout aboutJPanelLayout = new javax.swing.GroupLayout(aboutJPanel);
        aboutJPanel.setLayout(aboutJPanelLayout);
        aboutJPanelLayout.setHorizontalGroup(
            aboutJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(firstAboutJTextArea)
                .addContainerGap())
        );
        aboutJPanelLayout.setVerticalGroup(
            aboutJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(firstAboutJTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, 958, Short.MAX_VALUE))
        );

        mainJScrollPane.setViewportView(aboutJPanel);

        createdJLabel.setText("Created: Illarion Eremenko");

        versionJLabel.setText("Version: 1.3");

        closeJButton.setText("Close");
        closeJButton.setToolTipText("Close about form");
        closeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeJButtonActionPerformed(evt);
            }
        });

        copyrightJLabel.setText("Copyright: Freeware ");

        versionJLabel1.setText("Date: 03/1/2018");

        javax.swing.GroupLayout creditsJPanelLayout = new javax.swing.GroupLayout(creditsJPanel);
        creditsJPanel.setLayout(creditsJPanelLayout);
        creditsJPanelLayout.setHorizontalGroup(
            creditsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creditsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(creditsJPanelLayout.createSequentialGroup()
                        .addComponent(versionJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE))
                    .addGroup(creditsJPanelLayout.createSequentialGroup()
                        .addComponent(createdJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeJButton)
                        .addGap(92, 92, 92)))
                .addGroup(creditsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(copyrightJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(creditsJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(versionJLabel1)))
                .addContainerGap())
        );
        creditsJPanelLayout.setVerticalGroup(
            creditsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creditsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createdJLabel)
                    .addComponent(closeJButton)
                    .addComponent(copyrightJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(creditsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(versionJLabel)
                    .addComponent(versionJLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(creditsJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleJLabel)
                .addGap(160, 160, 160))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(titleJLabel)
                .addGap(18, 18, 18)
                .addComponent(mainJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(creditsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /** 
     * Disposes of the form.
     * @param evt ActionEvent performed by closeJButton 
     */
    private void closeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeJButtonActionPerformed
        // Dispose of the about form
        this.dispose();
    }//GEN-LAST:event_closeJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aboutJPanel;
    private javax.swing.JButton closeJButton;
    private javax.swing.JLabel copyrightJLabel;
    private javax.swing.JLabel createdJLabel;
    private javax.swing.JPanel creditsJPanel;
    private javax.swing.JTextArea firstAboutJTextArea;
    private javax.swing.JScrollPane mainJScrollPane;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JLabel versionJLabel;
    private javax.swing.JLabel versionJLabel1;
    // End of variables declaration//GEN-END:variables
}
